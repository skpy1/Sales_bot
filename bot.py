import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Command
from aiogram.utils import executor
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext


class GetGroup(StatesGroup):
    pokupka = State()
    clothe_or_sneaker = State()


db = sqlite3.connect("bazaPokupok.db")
sql = db.cursor()
sql.execute("""CREATE TABLE IF NOT EXISTS users (
    user_id INT,
    userName TEXT,
    price INT,
    clothe_or_sneakers INT
)""")


bot = Bot(token="")
dp = Dispatcher(bot, storage=MemoryStorage())
pushbutton = types.ReplyKeyboardMarkup(resize_keyboard=True)
button1 = types.KeyboardButton("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí∏")
button2 = types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üìû")
button3 = types.KeyboardButton("–°–ø—Ä–∞–≤–∫–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ ‚ùì")
pushbutton.add(button1, button2, button3)

otmena = types.ReplyKeyboardMarkup(resize_keyboard=True)
otmenabutton = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
itog_price_btn = types.KeyboardButton("–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞")
otmena.add(otmenabutton, itog_price_btn)

cl_or_sn = types.ReplyKeyboardMarkup(resize_keyboard=True)
sneakers_btn = types.KeyboardButton("–û–±—É–≤—å")
clothe_btn = types.KeyboardButton("–û–¥–µ–∂–¥–∞")
cl_or_sn.add(sneakers_btn, clothe_btn)


@dp.message_handler(Command("start"), state=None)
async def welcome(message):
    if message.from_user.id == message.chat.id:
        sql.execute(f"SELECT * FROM users WHERE user_id = {message.from_user.id}")
        if sql.fetchone() is None:
            sql.execute(f"INSERT INTO users VALUES (?, ?, ?, ?)",
                        (message.from_user.id, message.from_user.username, 0, None))
            db.commit()
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞. –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π, –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ - https://vk.com/wall-216021500_1. –î–ª—è —Ä–∞—Å—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏", reply_markup=pushbutton)


@dp.message_handler(content_types=["text"])
async def qwerty(message):
    if message.text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üìû":
        await message.answer("–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –¥—Ä—É–≥–∏–º –Ω—é–∞–Ω—Å–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @blessed_union")
    elif message.text == "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí∏":
        await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–µ–∂–¥–∞ –∏–ª–∏ –æ–±—É–≤—å", reply_markup=cl_or_sn)
        await GetGroup.clothe_or_sneaker.set()
    elif message.text == "–°–ø—Ä–∞–≤–∫–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ ‚ùì":
        await message.answer("—Ç—É—Ç –≤–æ–ø—Ä–æ—Å—ã")
    elif message.text == "–û—Ç–º–µ–Ω–∞":
        await message.answer("–û—Ç–º–µ–Ω–∏–ª–æ—Å—å", reply_markup=pushbutton)
    elif message.text == "–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞":
        price = sql.execute(f'SELECT price FROM users WHERE user_id = {message.chat.id}').fetchone()[0]
        await message.answer(f"–í–∞—à–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: {price}")


@dp.message_handler(state=GetGroup.clothe_or_sneaker)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy():
        await state.finish()
        if message.text == '–û–¥–µ–∂–¥–∞':
            sql.execute(f'UPDATE users SET clothe_or_sneakers = 0 WHERE user_id = "{message.from_user.id}"')
            db.commit()
            await message.answer("–û–¥–µ–∂–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 –ø–æ–∑–∏—Ü–∏–∏ –≤ ¬•", reply_markup=otmena)
            await GetGroup.pokupka.set()
        elif message.text == '–û–±—É–≤—å':
            sql.execute(f'UPDATE users SET clothe_or_sneakers = 1 WHERE user_id = "{message.from_user.id}"')
            db.commit()
            # await message.answer("–û–±—É–≤—å. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 –ø–æ–∑–∏—Ü–∏–∏ –≤ ¬•", reply_markup=types.ReplyKeyboardRemove())
            await message.answer("–û–±—É–≤—å. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 –ø–æ–∑–∏—Ü–∏–∏ –≤ ¬•", reply_markup=otmena)
            await GetGroup.pokupka.set()


@dp.message_handler(state=GetGroup.pokupka)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy():
        await state.finish()
        if message.text == '–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞':
            price = sql.execute(f'SELECT price FROM users WHERE user_id = {message.chat.id}').fetchone()[0]
            await message.answer(f"–í–∞—à–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: {price}", reply_markup=pushbutton)
            sql.execute(f'UPDATE users SET price = 0 WHERE user_id = "{message.from_user.id}"')
            db.commit()
            return

        elif message.text == "–û—Ç–º–µ–Ω–∞":
            await message.answer("–û—Ç–º–µ–Ω–∏–ª–æ—Å—å", reply_markup=pushbutton)
            sql.execute(f'UPDATE users SET price = 0 WHERE user_id = "{message.from_user.id}"')
            db.commit()
            return

        if sql.execute(f'SELECT clothe_or_sneakers FROM users WHERE user_id = {message.chat.id}').fetchone()[0] == 0:
            await message.answer(f"–°—É–º–º–∞ —Ç–≤–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞ - {str(int(message.text) *  11.7 + 3200)} \n \n –í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç –≤—ã–∫—É–ø –ø–∞—Ä—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ —Å–æ —Å–∫–ª–∞–¥–∞ Poizon –≤ –ú–æ—Å–∫–≤—É, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä üí£ ")
            last_price = sql.execute(f'SELECT price FROM users WHERE user_id = {message.chat.id}').fetchone()[0]
            sql.execute(f'UPDATE users SET price = {last_price + int(message.text) *  11.7 + 3200} WHERE user_id = "{message.from_user.id}"')
            db.commit()

        elif sql.execute(f'SELECT clothe_or_sneakers FROM users WHERE user_id = {message.chat.id}').fetchone()[0] == 1:
            await message.answer(f"–°—É–º–º–∞ —Ç–≤–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞ - {str(int(message.text) *  11.7 + 1000000)} \n \n –í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç –≤—ã–∫—É–ø –ø–∞—Ä—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ —Å–æ —Å–∫–ª–∞–¥–∞ Poizon –≤ –ú–æ—Å–∫–≤—É, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä üí£ ")
            last_price = sql.execute(f'SELECT price FROM users WHERE user_id = {message.chat.id}').fetchone()[0]
            sql.execute(f'UPDATE users SET price = {last_price + int(message.text) *  11.7 + 1000000} WHERE user_id = "{message.from_user.id}"')
            db.commit()

        await message.answer(f'–í–≤–µ–¥–∏—Ç–µ –µ—â–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤')
        await GetGroup.pokupka.set()


async def on_startup(_):
    print("Bot activated")

if __name__ == "__main__":
    executor.start_polling(dp, on_startup=on_startup)
